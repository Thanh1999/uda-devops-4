name: Frontend Continuous Integration

on:
  workflow_dispatch:
  
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

env:
  NODE_VERSION: 18

jobs:
  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/frontend

    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 -t mp-frontend:latest .


