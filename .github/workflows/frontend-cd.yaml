name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - "starter/frontend/**"

  workflow_dispatch:

env:
  NODE_VERSION: 18

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    environment:
      name: staging

    defaults:
      run:
        working-directory: starter/frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://adbe8b578c30244d8baf5cbb9202d972-2092629410.us-east-1.elb.amazonaws.com --tag=111931375561.dkr.ecr.us-east-1.amazonaws.com/frontend .

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: 111931375561.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker image
        run: docker push 111931375561.dkr.ecr.us-east-1.amazonaws.com/frontend

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: staging

    defaults:
      run:
        working-directory: starter/frontend/k8s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Config kubectl
        run: aws eks update-kubeconfig --name cluster

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Get LoadBalancer URL
        id: get-loadbalancer-url
        run: |
          echo "LoadBalancer URL: $(kubectl get service frontend -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"